import{jsxs as f}from"react/jsx-runtime";import*as a from"fs";import{createFileRoute as h,lazyRouteComponent as v,lazyFn as y,useRouter as $}from"@tanstack/react-router";import g from"tiny-invariant";function i(e,t,n){return Object.assign(e,{url:"https://localhost:3000"})}function c(e,t){const n=t;return g(n.url,"createServerFn must be called with a function that is marked with the 'use server' pragma. Are you using the @tanstack/router-plugin/vite ?"),Object.assign(async(o,r)=>n({method:e,payload:o||void 0,requestInit:r?.requestInit}),{url:t.url})}const b=()=>Promise.resolve().then(()=>d),w=()=>Promise.resolve().then(()=>d),s=h("/")({component:v(w,"component",()=>s.ssr),loader:y(b,"loader")}),u="count.txt";async function l(){return parseInt(await a.promises.readFile(u,"utf-8").catch(()=>"0"))}const F=c("GET",i(m)),C=c("POST",i(p)),S=function(){const t=$(),n=s.useLoaderData();return f("button",{onClick:()=>{C(1).then(()=>{t.invalidate()})},children:["Add 1 to ",n,"?"]})},j=async()=>await F();function m(){return l()}async function p(e){const t=await l();await a.promises.writeFile(u,`${t+e}`)}const d=Object.freeze(Object.defineProperty({__proto__:null,$$function0:m,$$function1:p,component:S,loader:j},Symbol.toStringTag,{value:"Module"}));export{m as $$function0,p as $$function1,S as component,j as loader};
